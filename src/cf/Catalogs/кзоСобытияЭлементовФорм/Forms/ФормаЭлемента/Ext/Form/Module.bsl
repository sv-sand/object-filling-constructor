
#Область Служебные

&НаСервере
Функция СформироватьНаименование()
	
	Текст = Строка(Объект.ОбъектМетаданных);	
	
	Если ЗначениеЗаполнено(Объект.ИмяФормы) Тогда
		Текст = Текст + "." + Элементы.ИмяФормы.СписокВыбора.НайтиПоЗначению(Объект.ИмяФормы).Представление;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ИмяЭлемента) Тогда
		Текст = Текст + "." + Элементы.ИмяЭлемента.СписокВыбора.НайтиПоЗначению(Объект.ИмяЭлемента).Представление;
		
		Если ЗначениеЗаполнено(Объект.ИмяСобытия) Тогда
			Текст = Текст + "." + Элементы.ИмяСобытия.СписокВыбора.НайтиПоЗначению(Объект.ИмяСобытия).Представление;	
		КонецЕсли;	
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьПредставление(Имя, Представление, Шаблон = " (%1)")
	
	Массив = Новый Массив;
	Массив.Добавить(Новый ФорматированнаяСтрока(Имя));
	
	Если ЗначениеЗаполнено(Представление) Тогда
		Суфикс = СтрШаблон(Шаблон, Представление);
		Массив.Добавить(Новый ФорматированнаяСтрока(Суфикс, , WebЦвета.Серый));
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(Массив);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНаименование()
	
	Если НЕ ИспользуетсяПроизвольноеНаименование Тогда
		Объект.Наименование = СформироватьНаименование();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокФорм()
	
	Элементы.ИмяФормы.СписокВыбора.Очистить();
	Если НЕ ЗначениеЗаполнено(Объект.ОбъектМетаданных) Тогда
		Объект.ИмяФормы = "";
		Модифицированность = Истина;
		Возврат;
	КонецЕсли;
	
	Форма = Объект.ОбъектМетаданных.ЗначениеПустойСсылки.Метаданные().ОсновнаяФормаОбъекта;
	Если Форма = Неопределено Тогда
		Объект.ИмяФормы = "";
		Модифицированность = Истина;
		Возврат;
	КонецЕсли;
	
	Элементы.ИмяФормы.СписокВыбора.Добавить(Форма.Имя, Форма.Синоним);
	
	Если ЗначениеЗаполнено(Объект.ИмяФормы)
		И Элементы.ИмяФормы.СписокВыбора.НайтиПоЗначению(Объект.ИмяФормы) = Неопределено 
		Тогда
		Объект.ИмяФормы = "";
		Модифицированность = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолноеИмяФормы()
	
	ПолноеИмя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ОбъектМетаданных, "ПолноеИмя");	
	Объект.ПолноеИмяФормы = ПолноеИмя + ".Форма." + Объект.ИмяФормы;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокЭлементовФормы()
	
	Элементы.ИмяЭлемента.СписокВыбора.Очистить();
	Если ДанныеФормы = Неопределено Тогда
		Объект.ИмяЭлемента = "";
		Модифицированность = Истина;
		Возврат;
	КонецЕсли;
	
	Для каждого КлючИЗначение Из ДанныеФормы.Элементы Цикл
		Элемент = КлючИЗначение.Значение;
		
		Представление = СформироватьПредставление(Элемент.Заголовок, Элемент.Тип);
		Элементы.ИмяЭлемента.СписокВыбора.Добавить(Элемент.Имя, Представление);
	КонецЦикла;
	
	Элементы.ИмяЭлемента.СписокВыбора.СортироватьПоПредставлению();
	
	Если ЗначениеЗаполнено(Объект.ИмяЭлемента)
		И Элементы.ИмяЭлемента.СписокВыбора.НайтиПоЗначению(Объект.ИмяЭлемента) = Неопределено 
		Тогда
		Объект.ИмяЭлемента = "";
		Модифицированность = Истина;
	КонецЕсли;
	
	ЗаполнитьСписокИмяСобытия();
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокИмяСобытия()
	
	Элементы.ИмяСобытия.СписокВыбора.Очистить();
	Если НЕ ЗначениеЗаполнено(Объект.ИмяЭлемента) Тогда
		Объект.ИмяСобытия = Неопределено;
		Модифицированность = Истина;
		Возврат;
	КонецЕсли;
	
	Элемент = ДанныеФормы.Элементы.Получить(Объект.ИмяЭлемента);
	
	МассивСобытий = кзоИнтеграция.ПолучитьПодключаемыеСобытияЭлементов();	
	Для каждого ИмяСобытия Из МассивСобытий Цикл
		
		Если Элемент.Тип = Тип("ПолеФормы")
			И кзоФормы.ДействиеПрименимоДляПоляФормы(ВидПоляФормы[Элемент.Вид], ИмяСобытия) 
			Тогда			
			Элементы.ИмяСобытия.СписокВыбора.Добавить(ИмяСобытия, ИмяСобытия);
			
		ИначеЕсли Элемент.Тип = Тип("КнопкаФормы") 
			И кзоФормы.ДействиеПрименимоДляКнопкиФормы(ИмяСобытия) 
			Тогда
			Элементы.ИмяСобытия.СписокВыбора.Добавить(ИмяСобытия, ИмяСобытия);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Объект.ИмяСобытия) 
		И Элементы.ИмяСобытия.СписокВыбора.НайтиПоЗначению(Объект.ИмяСобытия) = Неопределено
		Тогда
		Объект.ИмяСобытия = Неопределено;
		Модифицированность = Истина;	
	КонецЕсли;
	
	Если Элементы.ИмяСобытия.СписокВыбора.Количество() = 1 Тогда
		Объект.ИмяСобытия = Элементы.ИмяСобытия.СписокВыбора.Получить(0).Значение;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ИмяСобытия) Тогда
		ТиповойОбработчик = Элемент.Обработчики.Получить(Объект.ИмяСобытия);
		Если ЗначениеЗаполнено(ТиповойОбработчик) Тогда
			ТиповойОбработчик = ТиповойОбработчик + "()";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Область ДанныеФормы

&НаКлиенте
Процедура ПолучитьДанныеФормы()

	Если НЕ ЗначениеЗаполнено(Объект.ПолноеИмяФормы) Тогда
		Возврат;	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("кзоНеИспользоватьПодсистему", Истина);
	Форма = ПолучитьФорму(Объект.ПолноеИмяФормы, ПараметрыФормы);
	
	Попытка
		ДанныеФормы = Форма.кзоПолучитьДанныеФормы();
	Исключение
		Текст = СтрШаблон("В форму ""%1"" требуется добавить подключаемые обработчики ""Конструктора заполнения объектов"" в соответствии с документацией к подсистеме.", 
			Элементы.ИмяФормы.СписокВыбора.НайтиПоЗначению(Объект.ИмяФормы).Представление			
		); 
		
		ПоказатьПредупреждение(, Текст, , "Внимание!");
		
		Объект.ИмяФормы = "";
		Объект.ПолноеИмяФормы = "";
		
		Возврат;
	КонецПопытки;
	
	ДополнитьДанныеФормы(ДанныеФормы);
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьДанныеФормы(ДанныеФормы)
	
	Для каждого КлючИЗначение Из ДанныеФормы.Элементы Цикл
		Элемент = КлючИЗначение.Значение;		
		Элемент.Вставить("ЭтоРеквизитОбъекта", Ложь);
		Элемент.Вставить("ЭтоТаблицаОбъекта", Ложь);
		
		УстановитьРеквизитыОбъекта(Элемент);
	КонецЦикла;
		
	ОтфильтроватьЭлементыДанныхФормы(ДанныеФормы);	
	СформироватьЗаголовокиЭлементов(ДанныеФормы);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРеквизитыОбъекта(Элемент)

	Если Элемент.Тип <> Тип("ПолеФормы") Тогда
		Возврат;	
	КонецЕсли;
	
	ПутьКДанным = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Элемент.ПутьКДанным, ".");	
	
	Если ПутьКДанным.Количество() < 2 
		ИЛИ ПутьКДанным.Получить(0) <> "Объект" 
		Тогда
		Возврат;
	КонецЕсли;
	
	Мета = Объект.ОбъектМетаданных.ЗначениеПустойСсылки.Метаданные();
	
	Если ПутьКДанным.Количество() = 2 Тогда
		
		МетаРеквизита = НайтиРеквизитМетаданных(Мета, ПутьКДанным.Получить(1));
		Если МетаРеквизита = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
	ИначеЕсли ПутьКДанным.Количество() = 3 Тогда	
		
		МетаТабличнойЧасти = Мета.ТабличныеЧасти.Найти(ПутьКДанным.Получить(1));
		Если МетаТабличнойЧасти = Неопределено Тогда
			Возврат;	
		КонецЕсли;
		
		МетаРеквизита = НайтиРеквизитМетаданных(МетаТабличнойЧасти, ПутьКДанным.Получить(2));
		Если МетаРеквизита = Неопределено Тогда
			Возврат;	
		КонецЕсли;
		
		Элемент.ЭтоТаблицаОбъекта = Истина;		
	Иначе
		Возврат;
	КонецЕсли;
	
	Элемент.ЭтоРеквизитОбъекта = Истина;
	
	ДополнитьЭлементПоРеквизитамОбъекта(Элемент, МетаТабличнойЧасти, МетаРеквизита);
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьЭлементПоРеквизитамОбъекта(Элемент, МетаТабличнойЧасти, МетаРеквизита)
	
	// Заполняем заголовок по синонимам реквизитов
	Если НЕ ЗначениеЗаполнено(Элемент.Заголовок) Тогда		
		Текст = "";
		
		Если Элемент.ЭтоТаблицаОбъекта Тогда
			Если ЗначениеЗаполнено(МетаТабличнойЧасти.Синоним) Тогда
				Текст = Текст + МетаТабличнойЧасти.Синоним;
			Иначе
				Текст = Текст + МетаТабличнойЧасти.Имя;
			КонецЕсли;			
			Текст = Текст + ".";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(МетаРеквизита.Синоним) Тогда
			Текст = Текст + МетаРеквизита.Синоним;
		Иначе
			Текст = Текст + МетаРеквизита.Имя;
		КонецЕсли;
		
		Элемент.Заголовок = Текст;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаголовокиЭлементов(ДанныеФормы)
	
	Для каждого КлючИЗначение Из ДанныеФормы.Элементы Цикл
		Элемент = КлючИЗначение.Значение;	
		
		Если ЗначениеЗаполнено(Элемент.Тип) Тогда
			Если НЕ ЗначениеЗаполнено(Элемент.Заголовок) Тогда
				Элемент.Заголовок = Элемент.Имя;	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОтфильтроватьЭлементыДанныхФормы(ДанныеФормы)
	
	НовыеЭлементы = Новый Соответствие;
	
	Для каждого КлючИЗначение Из ДанныеФормы.Элементы Цикл
		Элемент = КлючИЗначение.Значение;
		
		Если Элемент.Тип = Тип("КнопкаФормы") 
			И Элемент.Обработчики.Количество() > 0
			Тогда
			НовыеЭлементы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			
		ИначеЕсли Элемент.Тип = Тип("ПолеФормы") 
			И Элемент.ЭтоРеквизитОбъекта
			Тогда	
			НовыеЭлементы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			
		КонецЕсли;	
	КонецЦикла;
	
	ДанныеФормы.Элементы = НовыеЭлементы;
		
КонецПроцедуры

&НаСервере
Функция НайтиРеквизитМетаданных(Мета, ИмяРеквизита)
	
	Для каждого Реквизит Из Мета.СтандартныеРеквизиты Цикл
		Если Реквизит.Имя = ИмяРеквизита Тогда
			Возврат Реквизит;	
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Мета.Реквизиты.Найти(ИмяРеквизита);		
	
КонецФункции

#КонецОбласти 

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ЗаполнитьСписокФорм();
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	ПриСозданииЧтенииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПолучитьДанныеФормы();
	ЗаполнитьСписокЭлементовФормы();
	НаименованиеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПриСозданииЧтенииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПолучитьДанныеФормы();
	ЗаполнитьСписокЭлементовФормы();
	НаименованиеПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)

	НаименованиеПриИзмененииНаСервере();
		
КонецПроцедуры

&НаСервере
Процедура НаименованиеПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Наименование) Тогда
		ИспользуетсяПроизвольноеНаименование = Объект.Наименование <> СформироватьНаименование();
	Иначе
		ИспользуетсяПроизвольноеНаименование = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектМетаданныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Новый Структура;	
    СтруктураПараметров.Вставить("ОписаниеТипов", кзоСлужебные.ПолучитьТипыОбъектовСобытийФорм());
	
    ОписаниеОповещения = Новый ОписаниеОповещения("ОбъектМетаданныхНачалоВыбораЗавершение", ЭтаФорма);
	
    ОткрытьФорму("ОбщаяФорма.кзоВыборТипаОбъекта", СтруктураПараметров, Элемент, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбъектМетаданныхНачалоВыбораЗавершение(Значение, ДополнительнеПараметры) Экспорт
	
	Если Значение = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ОбъектМетаданныхНачалоВыбораЗавершениеНаСервере(Значение);
	ПолучитьДанныеФормы();
	ОбъектМетаданныхПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбъектМетаданныхНачалоВыбораЗавершениеНаСервере(Знач Тип) Экспорт
	
	Объект.ОбъектМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип);		
	ЗаполнитьСписокФорм();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбъектМетаданныхПриИзмененииНаСервере() Экспорт
	
	ЗаполнитьСписокЭлементовФормы();
	ЗаполнитьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФормыПриИзменении(Элемент)	
	
	ЗаполнитьПолноеИмяФормы();	
	ПолучитьДанныеФормы();	
	ИмяФормыПриИзмененииНаСервере();		
	
КонецПроцедуры

&НаСервере
Процедура ИмяФормыПриИзмененииНаСервере()
	
	ЗаполнитьСписокЭлементовФормы();
	ЗаполнитьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяЭлементаПриИзменении(Элемент)
	ИмяЭлементаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИмяЭлементаПриИзмененииНаСервере()
	
	ЗаполнитьСписокИмяСобытия();
	ЗаполнитьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяСобытияПриИзменении(Элемент)
	ЗаполнитьНаименование();	
КонецПроцедуры

#КонецОбласти
